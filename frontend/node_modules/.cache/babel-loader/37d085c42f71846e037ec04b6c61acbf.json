{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DJANGOHEROKU\\\\backends\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import './App.css';\n// function App() {\n//   return (\n//     <div className=\"App\">\n//     <h1>This is my first react project 2</h1>\n//     <h1>This is my first react project 2</h1>\n//     </div>\n//   );\n// }\n// export default App;\n// import React, { Component } from \"react\"\n// const todoItems = [\n//   {\n//     id: 1,\n//     title: \"Nature walk in the park\",\n//     description: \"Visit the park with my friends\",\n//     completed: true\n//   },\n//   {\n//     id: 2,\n//     title: \"Visit\",\n//     description: \"Got to my aunt's place\",\n//     completed: true\n//   },\n//   {\n//     id: 3,\n//     title: \"Write\",\n//     description: \"Do an article about anthropology\",\n//     completed: true\n//   },\n// ];\n// class App extends Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {todoItems};\n//     };\n//     render() {\n//       return (\n//         <main className=\"content\">\n//         <div className=\"row\">\n//           <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n//             <div className=\"card p-3\">\n//               <ul className=\"list-group list-group-flush\">\n//               {this.state.todoItems.map(item => (\n//               <div>\n//                 <h1>{item.title}</h1>\n//                 <span>{item.description}</span>\n//               </div>\n//               ))}\n//               </ul>\n//             </div>\n//           </div>\n//         </div>\n//       </main>\n//       )\n//     }\n//   }\n// export default App;\n// hghghghg\n// import React, { Component } from \"react\"\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       viewCompleted: false,\n//       activeItem: {\n//         title: \"\",\n//         description: \"\",\n//         completed: false\n//       },\n//       todoList: []\n//       };\n//   }\n//     async componentDidMount() {\n//       try {\n//         const res = await fetch('http://localhost:8000/api/todos/');\n//         const todoList = await res.json();\n//         this.setState({\n//           todoList\n//         });\n//       } catch (e) {\n//         console.log(e);\n//     }\n//     }\n//     renderItems = () => {\n//       const { viewCompleted } = this.state;\n//       const newItems = this.state.todoList.filter(\n//         item => item.completed === viewCompleted\n//       );\n//       return newItems.map(item => (\n//         <li \n//           key={item.id}\n//           className=\"list-group-item d-flex justify-content-between align-items-center\"\n//         >\n//           <span \n//             className={`todo-title mr-2 ${\n//               this.state.viewCompleted ? \"completed-todo\" : \"\"\n//             }`}\n//             title={item.description}\n//             >\n//               {/* <h1>Reasons why I like Reactjs</h1> */}\n//               <h1>{item.title}</h1> \n//               <p>{item.description}</p>\n//             </span>\n//         </li>\n//       ));\n//     };\n//     render() {\n//       return (\n//         <main className=\"content\">\n//         <div className=\"row\">\n//           <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n//             <div className=\"card p-3\">\n//               <ul className=\"list-group list-group-flush\">\n//                 {this.renderItems()}\n//               </ul>\n//             </div>\n//           </div>\n//         </div>\n//       </main>\n//       )\n//     }\n//   }\n// export default App;\nfunction MyComponent() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"https://api.example.com/items\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" \", item.price]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(MyComponent, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = MyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["MyComponent","error","setError","useState","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","message","map","item","name","price","id"],"sources":["C:/Users/USER/Desktop/DJANGOHEROKU/backends/frontend/src/App.js"],"sourcesContent":["\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n     \n//     <h1>This is my first react project 2</h1>\n//     <h1>This is my first react project 2</h1>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { Component } from \"react\"\n\n// const todoItems = [\n//   {\n//     id: 1,\n//     title: \"Nature walk in the park\",\n//     description: \"Visit the park with my friends\",\n//     completed: true\n//   },\n\n//   {\n//     id: 2,\n//     title: \"Visit\",\n//     description: \"Got to my aunt's place\",\n//     completed: true\n//   },\n\n//   {\n//     id: 3,\n//     title: \"Write\",\n//     description: \"Do an article about anthropology\",\n//     completed: true\n//   },\n// ];\n\n// class App extends Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {todoItems};\n//     };\n\n//     render() {\n//       return (\n//         <main className=\"content\">\n//         <div className=\"row\">\n//           <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n//             <div className=\"card p-3\">\n//               <ul className=\"list-group list-group-flush\">\n//               {this.state.todoItems.map(item => (\n//               <div>\n//                 <h1>{item.title}</h1>\n//                 <span>{item.description}</span>\n//               </div>\n//               ))}\n//               </ul>\n//             </div>\n//           </div>\n//         </div>\n//       </main>\n//       )\n//     }\n//   }\n  \n// export default App;\n// hghghghg\n\n// import React, { Component } from \"react\"\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       viewCompleted: false,\n//       activeItem: {\n//         title: \"\",\n//         description: \"\",\n//         completed: false\n//       },\n//       todoList: []\n//       };\n//   }\n\n//     async componentDidMount() {\n//       try {\n//         const res = await fetch('http://localhost:8000/api/todos/');\n//         const todoList = await res.json();\n//         this.setState({\n//           todoList\n//         });\n//       } catch (e) {\n//         console.log(e);\n//     }\n//     }\n//     renderItems = () => {\n//       const { viewCompleted } = this.state;\n//       const newItems = this.state.todoList.filter(\n//         item => item.completed === viewCompleted\n//       );\n//       return newItems.map(item => (\n//         <li \n//           key={item.id}\n//           className=\"list-group-item d-flex justify-content-between align-items-center\"\n//         >\n//           <span \n//             className={`todo-title mr-2 ${\n//               this.state.viewCompleted ? \"completed-todo\" : \"\"\n//             }`}\n//             title={item.description}\n//             >\n//               {/* <h1>Reasons why I like Reactjs</h1> */}\n//               <h1>{item.title}</h1> \n//               <p>{item.description}</p>\n//             </span>\n//         </li>\n//       ));\n//     };\n\n//     render() {\n//       return (\n//         <main className=\"content\">\n//         <div className=\"row\">\n//           <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n//             <div className=\"card p-3\">\n//               <ul className=\"list-group list-group-flush\">\n//                 {this.renderItems()}\n//               </ul>\n//             </div>\n//           </div>\n//         </div>\n//       </main>\n//       )\n//     }\n//   }\n  \n// export default App;\n\nfunction MyComponent() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"https://api.example.com/items\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <ul>\n        {items.map(item => (\n          <li key={item.id}>\n            {item.name} {item.price}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}"],"mappingsuB;EAAA;;EACrB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BF,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC,CAHqB,CAKrB;EACA;EACA;;EACAK,SAAS,CAAC,MAAM;IACdC,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;MACVR,WAAW,CAAC,IAAD,CAAX;MACAE,QAAQ,CAACM,MAAD,CAAR;IACD,CANL,EAOI;IACA;IACA;IACCZ,KAAD,IAAW;MACTI,WAAW,CAAC,IAAD,CAAX;MACAH,QAAQ,CAACD,KAAD,CAAR;IACD,CAbL;EAeD,CAhBQ,EAgBN,EAhBM,CAAT;;EAkBA,IAAIA,KAAJ,EAAW;IACT,oBAAO;MAAA,sBAAaA,KAAK,CAACa,OAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFD,MAEO,IAAI,CAACV,QAAL,EAAe;IACpB,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFM,MAEA;IACL,oBACE;MAAA,UACGE,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACb;QAAA,WACGA,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,KADpB;MAAA,GAASF,IAAI,CAACG,EAAd;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADF;EASD;AACF;;GAzCQnB,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}